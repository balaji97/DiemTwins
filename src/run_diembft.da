import os
import shutil
import sys

sys.path.append('../config')

from config import configs
from cryptography import Cryptography
from validator_twins import ValidatorTwins
from network_playground import NetworkPlayground


class RunDiemBFT(process):

    def setup(config, config_id):
        self.nvalidators = int(config['nvalidators'])
        self.nfaulty = int(config['nfaulty'])

    def run():

        private_keys_validators = {}
        public_keys_validators = {}

        os.makedirs('../logs/config' + str(config_id))
        os.makedirs('../ledgers/config' + str(config_id))

        validators = new(ValidatorTwins, num=nvalidators)

        network_playground = new(NetworkPlayground, num=1)
        setup(network_playground, ([],))

        for v in validators:
            private_key, public_key = Cryptography.generate_key()
            private_keys_validators[v] = private_key
            public_keys_validators[v] = public_key

        for i, v in enumerate(validators):
            setup({v}, (config, config_id, i, list(validators),
                        private_keys_validators[v], public_keys_validators, network_playground))

        start(network_playground)
        start(validators)

        await(each(v in validators, has=received(('Done',), from_=v)))
        output("All validators done.", config_id)
        send(('Done',), to=network_playground)


def is_config_valid(config):
    if int(config['nvalidators']) < (3 * int(config['nfaulty']) + 1):
        print(
            "Number of validators should be more than thrice of number of faulty validators.")
        return False
    return True


def main():

    if os.path.exists('../logs/') and os.path.isdir('../logs/'):
        shutil.rmtree('../logs/')

    if os.path.exists('../ledgers/') and os.path.isdir('../ledgers/'):
        shutil.rmtree('../ledgers/')

    config_id = 0
    for config in configs:
        if not is_config_valid(config):
            output("The provided config", config,
                   "is not valid. Skipping this config.")
            continue
        p = new(RunDiemBFT)
        setup(p, (config, config_id))
        start(p)
        config_id += 1
