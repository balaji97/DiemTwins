import uuid
from typing import Optional


# Returns the unique transaction if the round_num within n_rounds,i.e.
# Number of rounds defined in a test_case generated by the test_generator.
# Once the testcase's n_rounds are completed, it will generate a special transaction
# which will be used to check liveness property, i.e if that transaction is eventually committed
#  and is in the ledger of all the non-faulty validators, then liveness is ensured.
def get_transaction(round_num) -> Optional[str]:
    if round_num < config.n_rounds:
        # Generates a random UUID for the transaction
        t_id = uuid.UUID
        transaction = "Transaction_" + str(t_id)
    else:
        transaction = "Last_transaction"
    return transaction
